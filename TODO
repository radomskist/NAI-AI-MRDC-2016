Being taken care of by other members:
==================================
		-Ball color identification needs to be done
		-QR reading

	-Look for posts on edge of map?

	-Make window that prints values
		+Battery
		+CPU temp
		+What drivemanager is doing
		+Any important info



TEST:
===========================
	-Make sure had a second to warm up
	-Fix crashing (Might be fixed?)

	-RGB + Depth left right middle checks

	-Alternative to X forwarding
		(VLC with Webm settings)

NAI TODO:
==========================
General:
	-club laptop freezes after sleeping

Kinect RGB
	-Scan for key points
	-Remember floor color for successful check

STATES:
	+Need to do the return, do state, struct
		+States with arguments might have problems
		(only  base states take arguments, and states call them themselves?)

	NOTE WHEN GOING TO DOOR GO TO THE SPACE DIRECTLY INFRONT OF IT
		=Door will store direction

	NAIBRAIN STATES {
		>DOOR OPEN STATE
			+Scan for door
			+goto door found from scan
			+goto space infront of door if not
			+make sure door is closed first
			+Scan QR code on door
			+Open door if not closed

		while(loops < dispensers used) {
			>Go into room
				+Goto nearest unused dispenser

			>operate dispensers
				+Line up dispenser
				+get & check balls
				+mark dispenser as used

			>Return balls
		}

		>explore map (open doors and shit)
	}


AI:
	-Make sure drive manager doesn't get stuck if overshoots node
	-Check if path is still valid
	-If path was successful mark each space with -1 likelyness. Meaning there is 0 chance it is a wall.
	-Verification of walls (qr codes) is -2, meaning it's 100% a wall
	-Make sure to check if NAI gets stuck


Extras:
=====================
	(kinect)
	-Need to fix kinect lense
	-Double check rgb and depth allignment
	-Stop kinect from flooding logger
	-Save approx location of robot when images where taken?
	-Localizataion
		+remember where wall closest to center was last time it was seen.
	(AI)
	-Fine path finding
	-Make coarse path finding go diagnol when can
	-Make coarse path finding check which path is shortest
	(sdl)
	-Generate ID# for map so it only updates when changed
	-Optimize opengl window
		+Make sure no gl things are called when context isn't current
	(laptop)
	-Multithread
	-Nvidia drives (check if openkinect needs anymore nvidia crap)
	(Depth)
	-Make depth camera check if walls that fail are two walls and a gap
	-Use blob detection to identify other robots?
	(Web camera)
	-See where golf ball dispenser is
